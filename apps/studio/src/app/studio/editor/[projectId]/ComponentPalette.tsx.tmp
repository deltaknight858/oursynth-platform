'use client';

import React, { useState, useCallback } from 'react';
import { useDrag } from 'react-dnd';
import { useProjectContext } from '@/contexts/ProjectProvider';
import styled from 'styled-components';
import { baseComponents } from '@/components/base-components';
import { TemplateSelector } from '@/templates';
import { FaPlus } from 'react-icons/fa';
import type { Node } from '@/types/projects';

const PaletteContainer = styled.div`
  flex: 0 0 320px;
  min-width: 280px;
  max-width: 380px;
  height: 100vh;
  background: var(--glass-bg);
  backdrop-filter: var(--glass-blur);
  border-right: var(--glass-border);
  display: flex;
  flex-direction: column;
  overflow: hidden;

  .template-button {
    margin: 16px;
    padding: 12px;
    background: var(--accent-primary);
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    transition: all 0.2s;

    &:hover {
      background: var(--accent-hover);
      transform: translateY(-1px);
    }
  }
`;

const Modal = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
`;

const ModalContent = styled.div`
  background: var(--background-primary);
  padding: 24px;
  border-radius: 12px;
  width: 80%;
  max-width: 1200px;
  max-height: 80vh;
  overflow-y: auto;
  position: relative;
`;

export const ComponentPalette: React.FC = () => {
  const [showTemplates, setShowTemplates] = useState(false);
  const { addNode } = useProjectContext();

  const handleTemplateSelect = useCallback((template: Node) => {
    addNode(template);
    setShowTemplates(false);
  }, [addNode]);

  return (
    <PaletteContainer>
      <button 
        className="template-button"
        onClick={() => setShowTemplates(true)}
      >
        <FaPlus /> Add from Template
      </button>

      {showTemplates && (
        <Modal onClick={() => setShowTemplates(false)}>
          <ModalContent onClick={e => e.stopPropagation()}>
            <TemplateSelector onSelect={handleTemplateSelect} />
          </ModalContent>
        </Modal>
      )}
    </PaletteContainer>
  );
};
