
import logging
import azure.functions as func
import requests
import os

RASA_ENDPOINT = os.environ.get('RASA_ENDPOINT', 'http://localhost:5005/webhooks/rest/webhook')
PATHWAYS_ENDPOINT = os.environ.get('PATHWAYS_ENDPOINT', 'http://localhost:3001/api/generate')

def main(req: func.HttpRequest) -> func.HttpResponse:
    logging.info('OurSynth AI Function received a request.')
    try:
        req_body = req.get_json()
    except ValueError:
        return func.HttpResponse('Invalid JSON', status_code=400)

    action = req_body.get('action')
    message = req_body.get('message')
    prompt = req_body.get('prompt')
    code = req_body.get('code')

    # Proxy to Rasa chatbot
    if action == 'chat':
        if not message:
            return func.HttpResponse('Missing message for chat', status_code=400)
        rasa_res = requests.post(RASA_ENDPOINT, json={"sender": "user", "message": message})
        rasa_data = rasa_res.json()
        reply = rasa_data[0]['text'] if rasa_data and 'text' in rasa_data[0] else 'No response from Rasa.'
        explanation = f"Rasa chatbot received: '{message}' and replied: '{reply}'"
        return func.HttpResponse(
            f"{{'reply': '{reply}', 'explanation': '{explanation}'}}",
            mimetype="application/json"
        )

    # Proxy to Pathways Generator (OpenAI)
    if action == 'generate':
        if not prompt:
            return func.HttpResponse('Missing prompt for generation', status_code=400)
        pathways_res = requests.post(PATHWAYS_ENDPOINT, json={"prompt": prompt})
        pathways_data = pathways_res.json()
        code_result = pathways_data.get('code', '')
        explanation = f"Pathways Generator received prompt: '{prompt}' and generated code."
        return func.HttpResponse(
            f"{{'code': '{code_result}', 'explanation': '{explanation}'}}",
            mimetype="application/json"
        )

    # Code review/explanation
    if action == 'explain_code':
        if not code:
            return func.HttpResponse('Missing code for explanation', status_code=400)
        # For now, mock explanation
        explanation = f"This code defines a React component. It uses modern design patterns and is generated by AI."
        return func.HttpResponse(
            f"{{'explanation': '{explanation}'}}",
            mimetype="application/json"
        )

    return func.HttpResponse('Unknown action', status_code=400)
